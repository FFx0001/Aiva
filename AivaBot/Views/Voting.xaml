<Controls:MetroContentControl
    x:Class="AivaBot.Views.Voting"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:AivaBot.Views"
    xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="400"
    d:DesignWidth="1000"
    mc:Ignorable="d">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="489*" />
            <ColumnDefinition Width="511*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="27*" />
            <RowDefinition Height="173*" />
        </Grid.RowDefinitions>
        <Button
            x:Name="btnStart"
            Width="150"
            Height="40"
            Margin="2,5,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Command="{Binding StartVotingCommand}"
            Content="Start" />
        <Button
            x:Name="btnStop"
            Width="150"
            Height="40"
            Margin="157,5,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Command="{Binding StopVotingCommand}"
            Content="Stop" />
        <TextBox
            x:Name="tbName"
            Grid.Column="1"
            Width="200"
            Height="39"
            Margin="10,6,301,0"
            VerticalAlignment="Top"
            Controls:TextBoxHelper.ClearTextButton="True"
            Controls:TextBoxHelper.Watermark="Name"
            Text="{Binding Name}" />

        <TextBox
            x:Name="tbCommand"
            Grid.Column="1"
            Width="200"
            Height="39"
            Margin="301,5,10,0"
            VerticalAlignment="Top"
            Controls:TextBoxHelper.ClearTextButton="True"
            Controls:TextBoxHelper.Watermark="Command"
            Text="{Binding Model.Command}" />

        <StackPanel
            Grid.Row="1"
            Width="250"
            Margin="10,26,229,108"
            Orientation="Vertical">
            <TextBox
                x:Name="tbOption1"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option1"
                Text="{Binding Model.Option1}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption2"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option2"
                Text="{Binding Model.Option2}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption3"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option3"
                Text="{Binding Model.Option3}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption4"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option4"
                Text="{Binding Model.Option4}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption5"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option5"
                Text="{Binding Model.Option5}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption6"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option6"
                Text="{Binding Model.Option6}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption7"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option7"
                Text="{Binding Model.Option7}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox
                x:Name="tbOption8"
                Grid.Row="1"
                Height="20"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.Watermark="Option8"
                Text="{Binding Model.Option8}">
                <TextBox.Style>
                    <Style BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
                        <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="True" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="true">
                                <Setter Property="TextBox.IsReadOnly" Value="True" />
                                <Setter Property="TextBox.IsReadOnlyCaretVisible" Value="True" />
                            </DataTrigger>
                            <Trigger Property="Controls:TextBoxHelper.HasText" Value="False">
                                <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="False" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </StackPanel>
        <RadioButton
            x:Name="rbTorten"
            Grid.Row="1"
            Grid.Column="1"
            Margin="123,4,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="torten"
            GroupName="Chart"
            IsChecked="{Binding Model.ChartPie}" />
        <RadioButton
            x:Name="rbBalken"
            Grid.Row="1"
            Grid.Column="1"
            Margin="198,4,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="balken"
            GroupName="Chart"
            IsChecked="{Binding Model.ChartBasic}" />
        <RadioButton
            x:Name="rbBla"
            Grid.Row="1"
            Grid.Column="1"
            Margin="283,4,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Donut"
            GroupName="Chart"
            IsChecked="{Binding Model.ChartDonut}" />

        <Grid Grid.Row="2" Grid.Column="2">
            <Grid Margin="0,32,0,0" Visibility="{Binding Model.ChartPie}">
                <lvc:PieChart
                    x:Name="Torten"
                    Width="300"
                    Height="300"
                    LegendLocation="Bottom"
                    Series="{Binding tChartCollection}">
                    <lvc:PieChart.Style>
                        <Style TargetType="lvc:PieChart">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.ChartPie}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Model.ChartPie}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </lvc:PieChart.Style>
                </lvc:PieChart>
            </Grid>

            <Grid Margin="0,32,0,0" Visibility="{Binding Model.ChartDonut}">
                <lvc:PieChart
                    x:Name="Donut"
                    Width="300"
                    Height="300"
                    InnerRadius="100"
                    LegendLocation="Bottom"
                    Series="{Binding dChartCollection}">
                    <lvc:PieChart.Style>
                        <Style TargetType="lvc:PieChart">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.ChartDonut}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Model.ChartDonut}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </lvc:PieChart.Style>
                    <lvc:PieChart.ChartLegend>
                        <lvc:DefaultLegend BulletSize="20" />
                    </lvc:PieChart.ChartLegend>
                    <lvc:PieChart.DataTooltip>
                        <lvc:DefaultTooltip BulletSize="20" />
                    </lvc:PieChart.DataTooltip>
                </lvc:PieChart>
            </Grid>

            <Grid Margin="0,32,0,0" Visibility="{Binding Model.ChartBasic}">

                <lvc:CartesianChart
                    Width="300"
                    Height="300"
                    Series="{Binding bChartCollection}">
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis
                            Labels="{Binding OptionNames}"
                            LabelsRotation="10"
                            Position="LeftBottom">
                            <lvc:Axis.Separator>
                                <lvc:Separator Step="1" />
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisX>
                    <lvc:CartesianChart.AxisY>
                        <lvc:Axis
                            Title="Count"
                            LabelFormatter="{Binding Formatter}"
                            Position="RightTop">
                            <lvc:Axis.Separator>
                                <lvc:Separator IsEnabled="False" Step="1" />
                            </lvc:Axis.Separator>
                        </lvc:Axis>
                    </lvc:CartesianChart.AxisY>

                    <lvc:CartesianChart.Style>
                        <Style TargetType="lvc:CartesianChart">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Model.ChartBasic}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Model.ChartBasic}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </lvc:CartesianChart.Style>
                </lvc:CartesianChart>
            </Grid>
        </Grid>
    </Grid>
</Controls:MetroContentControl>
