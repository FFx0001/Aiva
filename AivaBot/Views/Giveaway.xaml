<Custom:MetroContentControl
    x:Class="AivaBot.Views.Giveaway"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Styles="AivaBot.Styles"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="503"
    d:DesignWidth="1092"
    mc:Ignorable="d">

    <Custom:MetroContentControl.Resources>
        <VisualBrush x:Key="Uncheck" Visual="{DynamicResource appbar_check}" />
        <VisualBrush x:Key="Check" Visual="{StaticResource close-circle-outline}" />
    </Custom:MetroContentControl.Resources>

    <Grid Width="1092">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="137*" />
            <ColumnDefinition Width="136*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Custom:Tile
                Grid.Column="0"
                Width="395"
                Height="26"
                Margin="141,10,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                <Custom:Tile.Style>
                    <Style TargetType="Controls:Tile">
                        <Setter Property="Content" Value="{Binding Model.Text.StatusInactive, Mode=OneTime}" />
                        <Setter Property="Background" Value="#CCF32424" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="True">
                                <Setter Property="Background" Value="#CC53F324" />
                                <Setter Property="Content" Value="{Binding Model.Text.StatusActive, Mode=OneTime}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Custom:Tile.Style>
            </Custom:Tile>

            <TextBox
                x:Name="tbKeyword"
                Width="395"
                Height="35"
                Margin="141,41,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Controls:TextBoxHelper.ClearTextButton="True"
                Controls:TextBoxHelper.Watermark="{Binding Model.Text.CommandWatermark}"
                FontSize="18"
                FontWeight="Bold"
                Text="{Binding Model.Options.Keyword}"
                TextWrapping="Wrap" />

            <CheckBox
                x:Name="cbAdmin"
                Width="74"
                Height="20"
                Margin="141,80,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="{Binding Model.Text.CheckBoxAdmin, Mode=OneTime}"
                IsChecked="{Binding Model.Options.Admin}">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.Admin}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.Admin}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <CheckBox
                x:Name="checkBox_Copy"
                Margin="259,80,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="White"
                Content="{Binding Model.Text.CheckBoxMod, Mode=OneTime}"
                IsChecked="{Binding Model.Options.Mod}">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.Mod}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.Mod}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <CheckBox
                x:Name="checkBox_Copy1"
                Margin="451,80,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="{Binding Model.Text.CheckBoxViewer, Mode=OneTime}"
                IsChecked="{Binding Model.Options.User}">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.User}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.User}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <CheckBox
                x:Name="cbSub"
                Margin="361,80,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="{Binding Model.Text.CheckBoxSub, Mode=OneTime}"
                IsChecked="{Binding Model.Options.Sub}">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.Sub}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Model.Options.Sub}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <Slider
                x:Name="sSubLuck"
                Width="359"
                Height="37"
                Margin="141,131,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                IsSnapToTickEnabled="True"
                LargeChange="2"
                Maximum="10"
                Minimum="1"
                SmallChange="1"
                TickPlacement="BottomRight"
                Value="{Binding Model.Options.SubLuck}" />

            <TextBlock
                x:Name="tbCountSubLuck"
                Width="23"
                Height="37"
                Margin="229,173,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontSize="16"
                Text="{Binding ElementName=sSubLuck, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                TextWrapping="Wrap" />

            <TextBlock
                x:Name="tbSubLuck"
                Width="102"
                Height="37"
                Margin="141,174,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontSize="16"
                Text="{Binding Model.Text.SubLuckText, Mode=OneTime}"
                TextWrapping="Wrap" />

            <Expander
                x:Name="expander1"
                Width="177"
                Height="176"
                Margin="10,327,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="#CC9CA09C"
                BorderBrush="#CC5E5F5E"
                ExpandDirection="Up"
                Header="{Binding Model.Text.ExpanderWinnersDescription, Mode=OneWay}">
                <Grid Width="auto" Background="#FFE5E5E5">
                    <StackPanel
                        Width="165"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                        <CheckBox
                            Width="auto"
                            Content="{Binding Model.Text.UncheckWinner, Mode=OneTime}"
                            IsChecked="{Binding Model.UncheckWinner}" />
                        <ListView
                            x:Name="myListView"
                            Width="auto"
                            ItemsSource="{Binding Model.Winners}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        x:Name="DataItem"
                                        FontSize="16"
                                        Text="{Binding}" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </Grid>
            </Expander>

            <Button
                x:Name="btnStart"
                Grid.Column="0"
                Width="107"
                Height="38"
                Margin="206,455,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding StartCommand}"
                Content="{Binding Model.Text.ButtonGiveawayStart, Mode=OneTime}" />

            <Button
                x:Name="btnStop"
                Grid.Column="0"
                Width="107"
                Height="38"
                Margin="318,455,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding StopCommand}"
                Content="{Binding Model.Text.ButtonGiveawayStop, Mode=OneTime}" />

            <Button
                x:Name="btnRoll"
                Grid.Column="0"
                Width="107"
                Height="38"
                Margin="431,455,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding RollCommand}"
                Content="{Binding Model.Text.ButtonGiveawayRoll, Mode=OneTime}" />
        </Grid>

        <Grid Grid.Column="1">
            <Expander
                x:Name="expander"
                Grid.Column="1"
                Width="524"
                Height="483"
                Margin="10,10,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Background="#CC9CA09C"
                BorderBrush="#CC5E5F5E"
                Header="{Binding Model.Text.ExpanderUsersDescription, Mode=OneTime}">
                <Grid Background="#FFE5E5E5">
                    <DataGrid
                        AutoGenerateColumns="False"
                        IsReadOnly="True"
                        ItemsSource="{Binding GiveawayInstance.UserList.UserList}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn
                                Width="45"
                                Binding="{Binding Path=IsSub}"
                                Header="Sub" />
                            <DataGridTextColumn
                                Width="*"
                                Binding="{Binding Path=Username}"
                                FontSize="20"
                                Header="ID" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Expander>
        </Grid>
    </Grid>
</Custom:MetroContentControl>