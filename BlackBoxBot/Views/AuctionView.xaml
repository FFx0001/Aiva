<Controls:MetroContentControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BlackBoxBot.Views"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:ViewModels="clr-namespace:BlackBoxBot.ViewModels" x:Class="BlackBoxBot.Views.Auction"
                              
             mc:Ignorable="d" 
             d:DesignHeight="503" d:DesignWidth="1092">
    <Controls:MetroContentControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
                <ResourceDictionary Source="../Styles/Auction.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <CollectionViewSource x:Key="SortedList" Source="{Binding AuctionHandler.Current.Users}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Tickets" Direction="Descending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <VisualBrush 
                x:Key="IconChecked" 
                Stretch="Uniform" 
                Visual="{DynamicResource appbar_check}"/>

            <VisualBrush 
                x:Key="IconUnchecked" 
                Stretch="Uniform" 
                Visual="{DynamicResource appbar_cancel}"/>

            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle 
                                    Margin="0" 
                                    SnapsToDevicePixels="true" 
                                    Stroke="Black" 
                                    StrokeThickness="1" 
                                    StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                    <Rectangle 
                                        x:Name="PlayPause" 
                                        Visibility="Visible"
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch" 
                                        Width="16" Height="16">
                                        <Rectangle.Style>
                                            <Style  TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{StaticResource IconChecked}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding exTickets}" Value="True">
                                                        <Setter Property="Fill" Value="{StaticResource IconUnchecked}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <ContentPresenter 
                                        Grid.Column="1" 
                                        HorizontalAlignment="Left" 
                                        Margin="4,0,0,0" 
                                        RecognizesAccessKey="True" 
                                        SnapsToDevicePixels="True" 
                                        VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Simple Expander Template-->
            <ControlTemplate x:Key="SimpleExpanderTemp" TargetType="{x:Type Expander}">
                <DockPanel>
                    <ToggleButton 
                        x:Name="ExpanderButton" 
                        DockPanel.Dock="Top"
                        Template="{StaticResource SimpleExpanderButtonTemp}"
                        Content="{TemplateBinding Header}"
                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                        OverridesDefaultStyle="True"
                        Padding="1.5,0"/>
                    <ContentPresenter x:Name="ExpanderContent"
                                  Grid.Row="1" 
                                  Visibility="Collapsed"
                                  DockPanel.Dock="Bottom"/>
                </DockPanel>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="True">
                        <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <CollectionViewSource x:Key="auctionViewModelsViewSource" d:DesignSource="{d:DesignInstance {x:Type ViewModels:AuctionViewModels}, CreateList=True}"/>
            <CollectionViewSource x:Key="auctionViewModelsUsersViewSource" Source="{Binding Users, Source={StaticResource auctionViewModelsViewSource}}"/>
        </ResourceDictionary>

    </Controls:MetroContentControl.Resources>

    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="179*"/>
            <ColumnDefinition Width="185*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <TextBox x:Name="tbName"
                 Grid.Column="0"
                 HorizontalAlignment="Left" 
                 Margin="28,52,0,0" 
                 TextWrapping="Wrap"
                 VerticalAlignment="Top" 
                 Height="52" 
                 Width="488" 
                 FontSize="36"
                 Text="{Binding AuctionName}"
                 Controls:TextBoxHelper.AutoWatermark="True"
                 Controls:TextBoxHelper.ClearTextButton="True"
                 Controls:TextBoxHelper.Watermark="{Binding Model.Text.NameWatermark, Mode=OneTime}">

                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AuctionHandler.IsStarted}" Value="True">
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <TextBox x:Name="tbKeyword" 
                Grid.Column="0"
                HorizontalAlignment="Left" 
                Margin="28,104,0,0" 
                TextWrapping="Wrap"
                VerticalAlignment="Top" 
                Height="52" 
                Width="488" 
                FontSize="36"
                Text="{Binding Command}"
                Controls:TextBoxHelper.AutoWatermark="True"
                Controls:TextBoxHelper.ClearTextButton="True"
                Controls:TextBoxHelper.Watermark="{Binding Model.Text.CommandWatermark, Mode=OneTime}">

                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AuctionHandler.IsStarted}" Value="True">
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <Button 
                Name="btnStart" 
                Content="{Binding Model.Text.ButtonStartName, Mode=OneTime}" 
                HorizontalAlignment="Left" 
                Margin="205,189,0,0" 
                VerticalAlignment="Top" 
                Width="104" 
                Height="42" 
                Grid.Column="0" 
                Command="{Binding StartCommand}"/>

            <Button 
            x:Name="btnStop" 
            Content="{Binding Model.Text.ButtonStopName, Mode=OneTime}" 
            HorizontalAlignment="Left" 
            Margin="327,189,0,0" 
            VerticalAlignment="Top" 
            Width="104" 
            Height="42" 
            Grid.Column="0" 
            Command="{Binding StopCommand}"/>

            <Expander 
            x:Name="ExpanderTickets"
            Template="{StaticResource SimpleExpanderTemp}"
            IsExpanded="{Binding exTickets}"
            OverridesDefaultStyle="True"
            HorizontalAlignment="Left"
            VerticalAlignment="Top" Margin="28,189,0,0"
            Header="{Binding Model.Text.TicketExpanderName, Mode=OneTime}"
            Width="100"
            >


                <Expander.Style>
                    <Style TargetType="{x:Type Expander}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Expander}">
                                    <DockPanel>
                                        <ToggleButton 
                                            x:Name="HeaderSite" 
                                            ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                            Content="{TemplateBinding Header}" 
                                            DockPanel.Dock="Top" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            FontWeight="{TemplateBinding FontWeight}" 
                                            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                                            FontStyle="{TemplateBinding FontStyle}" 
                                            FontStretch="{TemplateBinding FontStretch}" 
                                            FontSize="{TemplateBinding FontSize}" 
                                            FontFamily="{TemplateBinding FontFamily}" 
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            Margin="1" 
                                            MinWidth="0" 
                                            MinHeight="0" 
                                            Padding="{TemplateBinding Padding}" 
                                            Style="{StaticResource ExpanderDownHeaderStyle}" 
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                        <ContentPresenter 
                                            x:Name="ExpandSite" 
                                            DockPanel.Dock="Bottom" 
                                            Focusable="false" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            Margin="{TemplateBinding Padding}" 
                                            Visibility="Collapsed" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </DockPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="true">
                                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Expander.Style>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Preis pro Ticket"/>
                    <Controls:NumericUpDown Minimum="1" HorizontalAlignment="Left" Value="{Binding Tickets}" Height="50" VerticalAlignment="Top" Width="100" FontSize="20"/>
                </StackPanel>
            </Expander>

            <Expander Grid.Column="0" FlowDirection="RightToLeft" Width="200" ExpandDirection="Up" Header="Settings" Margin="316,309,21,30">
                <Grid>
                    <CheckBox Width="200"  IsChecked="{Binding WriteInChat}" Content=" Write in Chat&#10; when auction starts"/>
                </Grid>
            </Expander>

        </Grid>

        <DataGrid x:Name="usersDataGrid" 
                  AutoGenerateColumns="False" 
                  Grid.Column="1" 
                  CanUserSortColumns="False"
                  EnableRowVirtualization="True" 
                  ItemsSource="{Binding Source={StaticResource SortedList}}" 
                  Margin="10" CanUserAddRows="False" 
                  CanUserDeleteRows="True" 
                  RowDetailsVisibilityMode="VisibleWhenSelected">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="ticketsColumn" Binding="{Binding Tickets}" Header="Tickets" Width="SizeToHeader"/>
                <DataGridTextColumn x:Name="usernameColumn" Binding="{Binding Username}" Header="Username" Width="*" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Controls:MetroContentControl>
