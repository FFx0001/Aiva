<Custom:MetroContentControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BlackBoxBot.Controls.Main"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" x:Class="BlackBoxBot.Views.Giveaway"
			 xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
			 xmlns:UserFlyout="clr-namespace:BlackBoxBot.Controls.Flyout"
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Styles="BlackBoxbot.Styles"
             d:DesignHeight="503" d:DesignWidth="1092">

    <Custom:MetroContentControl.Resources>
        <VisualBrush x:Key="Uncheck" Visual="{DynamicResource appbar_check}" />
        <VisualBrush x:Key="Check" Visual="{StaticResource close-circle-outline}" />
    </Custom:MetroContentControl.Resources>

    <Grid Width="1092">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="137*"/>
            <ColumnDefinition Width="136*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Custom:Tile 
            HorizontalAlignment="Left" 
            Margin="141,10,0,0" 
            VerticalAlignment="Top" 
            Height="26" Width="395"
            Grid.Column="0">
                <Custom:Tile.Style>
                    <Style TargetType="Controls:Tile">
                        <Setter Property="Content" Value="{Binding Model.Text.StatusInactive, Mode=OneTime}"/>
                        <Setter Property="Background" Value="#CCF32424" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                <Setter Property="Background" Value="#CC53F324"/>
                                <Setter Property="Content" Value="{Binding Model.Text.StatusActive, Mode=OneTime}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Custom:Tile.Style>
            </Custom:Tile>

            <TextBox
			    x:Name="tbKeyword"
			    HorizontalAlignment="Left"
			    Height="35"
			    Margin="141,41,0,0"
			    TextWrapping="Wrap"
			    Text="{Binding Keyword}"
			    VerticalAlignment="Top"
			    Width="395"
			    Controls:TextBoxHelper.ClearTextButton="True" FontSize="18"
                Controls:TextBoxHelper.Watermark="{Binding Model.Text.CommandWatermark}" FontWeight="Bold"/>

            <CheckBox x:Name="cbAdmin" Content="{Binding Model.Text.CheckBoxAdmin, Mode=OneTime}" HorizontalAlignment="Left" Margin="141,80,0,0" VerticalAlignment="Top" IsChecked="{Binding Admin}" Height="20" Width="74">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Admin}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Admin}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <CheckBox x:Name="checkBox_Copy" Content="{Binding Model.Text.CheckBoxMod, Mode=OneTime}" HorizontalAlignment="Left" Margin="259,80,0,0" VerticalAlignment="Top" Background="White" IsChecked="{Binding Mod}">
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Mod}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Mod}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <CheckBox x:Name="checkBox_Copy1" Content="{Binding Model.Text.CheckBoxViewer, Mode=OneTime}" HorizontalAlignment="Left" Margin="451,80,0,0" VerticalAlignment="Top" IsChecked="{Binding User}" >
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding User}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding User}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <CheckBox x:Name="cbSub" Content="{Binding Model.Text.CheckBoxSub, Mode=OneTime}" HorizontalAlignment="Left" Margin="361,80,0,0" VerticalAlignment="Top" IsChecked="{Binding Sub}" >
                <CheckBox.LayoutTransform>
                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                </CheckBox.LayoutTransform>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsStarted}" Value="False">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Sub}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource TabItemSelectorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Sub}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <Slider 
                IsSnapToTickEnabled="True" 
                x:Name="sSubLuck" 
                HorizontalAlignment="Left" 
                SmallChange="1" 
                LargeChange="2" 
                Minimum="1" 
                Maximum="10" 
                Margin="141,131,0,0" 
                VerticalAlignment="Top" 
                Height="37" Width="359" 
                TickPlacement="BottomRight" 
                Value="{Binding SubLuck}"/>


            <TextBlock x:Name="tbCountSubLuck"
				   HorizontalAlignment="Left"
				   Margin="229,173,0,0"
				   TextWrapping="Wrap"
				   Text="{Binding ElementName=sSubLuck, Path=Value, UpdateSourceTrigger=PropertyChanged}"
				   VerticalAlignment="Top" Height="37" Width="23" FontSize="16"/>

            <TextBlock x:Name="tbSubLuck" 
				   HorizontalAlignment="Left" 
				   Margin="141,174,0,0" 
				   TextWrapping="Wrap" 
				   Text="{Binding Model.Text.SubLuckText, Mode=OneTime}" 
                   FontSize="16"
				   VerticalAlignment="Top" Height="37" Width="102"/>


            <Expander x:Name="expander1" Header="{Binding Model.Text.ExpanderWinnersDescription, Mode=OneWay}" ExpandDirection="Up" HorizontalAlignment="Left" Margin="10,327,0,0" VerticalAlignment="Top" Width="177" Height="176" Background="#CC9CA09C" BorderBrush="#CC5E5F5E">
                <Grid Background="#FFE5E5E5" Width="auto">
                    <StackPanel Orientation="Vertical" Width="165" HorizontalAlignment="Center">
                        <CheckBox Content="{Binding Model.Text.UncheckWinner, Mode=OneTime}" Width="auto" IsChecked="{Binding UncheckWinner}"/>
                        <ListView x:Name="myListView" ItemsSource="{Binding Winners}" Width="auto">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="DataItem" FontSize="16" Text="{Binding}" />
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </Grid>
            </Expander>

            <Button x:Name="btnStart" 
                    Content="{Binding Model.Text.ButtonGiveawayStart, Mode=OneTime}" 
                    HorizontalAlignment="Left" 
                    Margin="206,455,0,0" 
                    VerticalAlignment="Top" 
                    Width="107" 
                    Height="38" 
                    Command="{Binding StartCommand}"
                    Grid.Column="0"/>

            <Button x:Name="btnStop" 
                    Content="{Binding Model.Text.ButtonGiveawayStop, Mode=OneTime}" 
                    HorizontalAlignment="Left" 
                    Margin="318,455,0,0" 
                    VerticalAlignment="Top" 
                    Width="107" 
                    Height="38" 
                    Command="{Binding StopCommand}"
                    Grid.Column="0"/>

            <Button x:Name="btnRoll" 
                Content="{Binding Model.Text.ButtonGiveawayRoll, Mode=OneTime}" 
                HorizontalAlignment="Left" 
                Margin="431,455,0,0" 
                VerticalAlignment="Top" 
                Width="107" Height="38" 
                Command="{Binding RollCommand}"
                Grid.Column="0"/>
        </Grid>

        <Grid Grid.Column="1">
            <Expander x:Name="expander" Grid.Column="1" Header="{Binding Model.Text.ExpanderUsersDescription, Mode=OneTime}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="524" Height="483" Background="#CC9CA09C" BorderBrush="#CC5E5F5E">
                <Grid Background="#FFE5E5E5">
                    <DataGrid ItemsSource="{Binding GiveawayInstance.UserList.UserList}" 
                              AutoGenerateColumns="False"
                              IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Sub" Binding="{Binding Path=IsSub}" Width="45"/>
                            <DataGridTextColumn Header="ID" Binding="{Binding Path=Username}" Width="*" FontSize="20"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Expander>
        </Grid>
    </Grid>
</Custom:MetroContentControl>
